(use tree-manual.uscm)

(val list '())

(define path (n t)
    (begin
	 (if 
	  (not (tree? t)) 'error
	  (if (not (tree-search n t)) #f
	   (if (= n (tree-datum t)) 
        (begin
         (println list)
         (set list '())
        )
	    (if (< n (tree-datum t))
         (begin 
          (path n (tree-left t))
          (set list (cons 'left list))
         )
         (begin
          (path n (tree-right t))
          (set list (cons 'right list))
         ) 
        ) 
	   )
      )
     )
    )
)

(path 12 (tree-add 12 (tree-add 11 (tree-add 15 (tree-add 9 (tree-add 8 (tree-add 2 (tree-add 1 (tree-add 5 (tree-add 3 (tree-add 7 (tree-make-null))))))))))))
(path 2 (tree-add 12 (tree-add 11 (tree-add 15 (tree-add 9 (tree-add 8 (tree-add 2 (tree-add 1 (tree-add 5 (tree-add 3 (tree-add 7 (tree-make-null))))))))))))

(val exploded '())

(define explode-digits (n)

    (begin

        (while (>= n 1)
            (begin
                
                (set exploded (cons (mod n 10) exploded))
                (set n (/ n 10))

            )
        )

        (println exploded)

    )
)

(explode-digits 123456789)